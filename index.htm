<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Bubble sort algorithm</title>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">

</head>

<body>
    <form>
        <p>Number of elements:</p>
        <input type="range" name="amount" min="3" max="200" value="3" step="1" class="range_1">
        <p class="range_1_val">1</p>
        <p>Scale:</p>
        <input type="range" name="amount" min="1" max="100" value="1" step="5" class="range_2">
        <input type="number" name="Bar Weight" , value="5" class="weight">
        <p class="range_2_val">1</p>
        <input type="button" id="submit_btn" value="Submit and randomize">
        <input type="button" id="start_btn_bubble" value="Start Bubble Sort">
        
    </form>
    <br>
    <canvas id="can" width="1000" height="500" style="border: 1px solid black">Canvas not supported</canvas>

    <script>
        var canvas = document.getElementById('can');
        var ctx = canvas.getContext('2d');
        var scale = 10;
        var weight = 5;
        var elementsArray = [];
        var i = 0;
        var j = 0;

        function wait(ms) {
            var d = new Date();
            var d2 = null;
            do { d2 = new Date(); }
            while (d2 - d < ms);
        }

        function shuffleArray(array) {
            for (var i = array.length - 1; i > 0; i--) {
                var j = Math.floor(Math.random() * (i + 1));
                var temp = array[i];
                array[i] = array[j];
                array[j] = temp;
            }
        }

        function arrangeElementsVisual(array) {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            for (let i = 0; i < elementsArray.length; i++) {
                ctx.fillRect(0, i * (weight), array[i] * scale, weight);
            }
        }

        function gameLoopBubble() {
            //Bubble sort
            if (i < elementsArray.length - 1) {

                if (j < elementsArray.length - i - 1) {
                    if (elementsArray[j] > elementsArray[j + 1]) {
                        const temp = elementsArray[j];
                        elementsArray[j] = elementsArray[j + 1]
                        elementsArray[j + 1] = temp;
                    }
                    j++;
                } else {
                    j = 0;
                    i++;
                }
                arrangeElementsVisual(elementsArray)
            } else {
                clearInterval(window.inter)
                console.log('hello')
            }
        }

        function gameLoopInsert() {
            //Insertion Sort
            if (i < elementsArray.length) {
                if (j >= 0 && elementsArray[j] > key) {
                    elementsArray[j + 1] = elementsArray[j];
                    j = j - 1;
                    console.log(elementsArray)
                } else {
                    elementsArray[j + 1] = key;
                    i++;
                    key = elementsArray[i];
                    j = i - 1;
                }
            } else {
                clearInterval(window.inter)
                console.log('hello')
            }
        }

        document.getElementById('submit_btn').addEventListener('click', function () {
            elementsArray = []
            for (let i = 1; i <= document.getElementsByClassName('range_1')[0].value; i++) {
                elementsArray.push(i)
            }
            scale = document.getElementsByClassName('range_2')[0].value
            weight = parseInt(document.getElementsByClassName('weight')[0].value)
            shuffleArray(elementsArray)
            console.log(elementsArray)
            arrangeElementsVisual(elementsArray)
        })

        document.getElementById('start_btn_bubble').addEventListener('click', function () {
            i = 0;
            j = 0;
            window.inter = setInterval(gameLoopBubble, 1)
        })

        document.getElementById('start_btn_insert').addEventListener('click', function () {
            i = 1; 
            key = elementsArray[i]
            j = i - 1;
            window.inter = setInterval(gameLoopBubble, 100)
        })

    </script>
</body>

</html>
